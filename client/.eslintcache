[{"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/App.js":"1","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/Navbar.js":"2","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Home.js":"3","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Signup.js":"4","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Profile.js":"5","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Login.js":"6","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/reportWebVitals.js":"7","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/CreatePost.js":"8","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/index.js":"9","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/reducers/userReducer.js":"10","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/UserProfile.js":"11","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/FollowingPosts.js":"12"},{"size":1797,"mtime":1606894330393,"results":"13","hashOfConfig":"14"},{"size":1502,"mtime":1606894336345,"results":"15","hashOfConfig":"14"},{"size":6022,"mtime":1606709215709,"results":"16","hashOfConfig":"14"},{"size":4100,"mtime":1607248377387,"results":"17","hashOfConfig":"14"},{"size":3402,"mtime":1607249327147,"results":"18","hashOfConfig":"14"},{"size":2153,"mtime":1607248364824,"results":"19","hashOfConfig":"14"},{"size":362,"mtime":1606240915196,"results":"20","hashOfConfig":"14"},{"size":2831,"mtime":1606662765693,"results":"21","hashOfConfig":"14"},{"size":500,"mtime":1606240915192,"results":"22","hashOfConfig":"14"},{"size":524,"mtime":1607007735975,"results":"23","hashOfConfig":"14"},{"size":4641,"mtime":1607007732240,"results":"24","hashOfConfig":"14"},{"size":6045,"mtime":1606907298183,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1pfo480",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/App.js",["58","59"],"import React, { useEffect, createContext, useContext, useReducer} from 'react'\nimport { BrowserRouter, Route, useHistory } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport './App.css'\nimport Home from './components/screens/Home'\nimport Login from './components/screens/Login'\nimport Signup from './components/screens/Signup'\nimport Profile from './components/screens/Profile'\nimport CreatePost from './components/screens/CreatePost'\nimport { reducer, initialState } from './reducers/userReducer'\nimport UserProfile from './components/screens/UserProfile'\nimport FollowingPosts from './components/screens/FollowingPosts'\n\n\nexport const userContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const { state, dispatch } = useContext(userContext)\n  \n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'))\n    if(user) {\n      dispatch({type: 'USER', payload: user})\n    } else {\n      history.push('/login')\n    }\n  }, [])\n\n  return (\n    <>\n      <Route exact path='/'>\n        <Home />\n      </Route>\n      <Route path='/login'>\n        <Login />\n      </Route>\n      <Route path='/signup'>\n        <Signup />\n      </Route>\n      <Route exact path='/profile'>\n        <Profile />\n      </Route>\n      <Route path='/create'>\n        <CreatePost />\n      </Route>\n      <Route path='/profile/:userid'>\n        <UserProfile />\n      </Route>\n      <Route path='/followingposts'>\n        <FollowingPosts />\n      </Route>\n    </>\n  )\n}\n\nfunction App() {\n  const [ state, dispatch ] = useReducer(reducer, initialState)\n  return (\n    <userContext.Provider value = {{state, dispatch}}>\n      <BrowserRouter>\n        <Navbar />\n        <Routing />\n      </BrowserRouter>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n",["60","61"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/Navbar.js",["62"],"import React, { useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { userContext } from '../App'\nimport Profile from './screens/Profile'\n\nconst Navbar = () => {\n    const { state, dispatch } = useContext(userContext)\n    const history = useHistory()\n    const renderList = () => {\n        if(state) {\n            return [\n                <li><Link to=\"/profile\">Profile</Link></li>,\n                <li><Link to=\"/create\">Create Post</Link></li>,\n                <li><Link to=\"/followingposts\">Following Posts</Link></li>,\n                <li>\n                    <button className='btn waves-effect waves-light' \n                        onClick={() => {\n                            localStorage.clear()\n                            dispatch({type: 'CLEAR'})\n                            history.push('/login')\n                        }}\n                    >\n                        LogOut\n                    </button>\n                </li>\n            ]\n        } else {\n            return [\n                <li><Link to=\"/login\">Login</Link></li>,\n                <li><Link to=\"/signup\">SignUp</Link></li>\n            ]\n        }\n    }\n    return (\n        <nav>\n            <div className=\"nav-wrapper white\">\n            <Link to={state ? '/' : '/login'} className=\"brand-logo left\">Instagram</Link>\n            <ul id=\"nav-mobile\" className=\"right\">\n                {renderList()}\n            </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar","/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Home.js",["63","64"],"import React, { useContext, useEffect, useState } from 'react'\nimport { userContext } from '../../App'\nimport {Link} from 'react-router-dom'\n\n\nconst Home = () => {\n    const [data, setData] = useState([])\n    const { state, dispatch } = useContext(userContext)\n\n    useEffect(() => {\n        fetch('/allpost', {\n            headers: { \n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n        .then(result => {\n            setData(result.posts)\n        })\n    }, [])\n\n    const likePost = (id) => {\n        fetch('/like',{\n            method: 'put', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.map(item => {\n                if(item._id === result._id) {\n                    return result\n                } else {\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const unlikePost = (id) => {\n        fetch('/unlike',{\n            method: 'put', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.map(item => {\n                if(item._id === result._id) {\n                    return result\n                } else {\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const commentOnPost = (text, postId) => {\n        fetch('/comment',{\n            method: 'put', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                postId,\n                text\n            })\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.map(item => {\n                if(item._id === result._id) {\n                    return result\n                } else {\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const deletePost = (postId) => {\n        fetch(`/deletepost/${postId}`, {\n            method: 'delete',\n            headers: {\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt') \n            }\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.filter(item => {\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n\n    return (\n        <div className='home'>\n            {\n                    data.map((item) => {\n                        return (\n                        <div key={item._id} className='homeposts'>\n                            <h4><Link to={item.postedBy._id !== state._id ? '/profile/'+item.postedBy._id : '/profile'}>{item.postedBy.name}</Link></h4>\n                            {\n                                item.postedBy._id === state._id && \n                                <i className='material-icons' \n                                    style={{float: \"right\"}}\n                                    onClick={() => deletePost(item._id)}\n                                >\n                                    delete\n                                </i>\n                            }\n                            <div className='homeImage'>\n                                <img src={item.photo} />\n                            </div>\n                            <div>\n                                { \n                                    item.likes.includes(state._id) ?\n                                        <i className=\"material-icons\"\n                                            onClick={()=>{unlikePost(item._id)}}\n                                        >thumb_down\n                                        </i>\n                                    : \n                                        <i className=\"material-icons\"\n                                            onClick={()=>{likePost(item._id)}}\n                                        >thumb_up\n                                        </i>\n                                }\n                                <span className='like-count'>{item.likes.length}</span>\n                                <p>{item.title}</p>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map((comment) => {\n                                        return (\n                                            <p key={comment._id}>\n                                                <span style={{fontWeight: '500'}}>{comment.postedBy.name} </span>\n                                                {comment.text}\n                                            </p>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e) => {\n                                    e.preventDefault()\n                                    commentOnPost(e.target[0].value, item._id)\n                                }}>\n                                    <input type='text' placeholder='comment'/>\n                                </form>\n                            </div>    \n                        </div>\n                        )\n                })\n            }\n        </div>\n\n    )\n}\n\nexport default Home",["65","66"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Signup.js",["67","68","69","70","71","72","73","74","75","76","77","78","79"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Profile.js",["80","81","82"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/Login.js",["83"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/reportWebVitals.js",[],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/CreatePost.js",["84"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport M from 'materialize-css'\n\nconst CreatePost = () => {\n    const history = useHistory()\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [image , setImage] = useState('')\n    const [url , setUrl] = useState('')\n\n    useEffect(() => {\n        if(url) {\n            fetch('/createpost', {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwt')\n                },\n                body: JSON.stringify({\n                    title,\n                    body,\n                    pic: url    \n                })\n            }).then(res=>res.json())\n                .then(data => {\n                    if(data.error) {\n                        M.toast({html: data.error})\n                    } else {\n                        M.toast({html: 'posted successfully'})\n                        history.push('/')\n                    }\n                }).catch(e => {\n                    console.log(e)\n                })\n        }\n    },[url])\n\n    const postDetails = () => {\n        const data = new FormData()\n        data.append('file', image)\n        data.append('upload_preset', 'insta-clone')\n        data.append('cloud_name', 'panther123')\n        fetch('https://api.cloudinary.com/v1_1/panther123/image/upload', {\n            method: 'post',\n            body: data\n        }).then(res => res.json())\n        .then(data => {\n            setUrl(data.url)\n        }).catch(e => {\n            console.log(e)\n        })\n        \n    }\n    return (\n        <div className='createPost'>\n            <input \n                type = 'text'\n                placeholder = 'title'\n                value = {title}\n                onChange={(e) => setTitle(e.target.value)}\n            />\n            <input \n                type = 'text' \n                placeholder = 'body'\n                value = {body}\n                onChange = {(e) => setBody(e.target.value)}\n            />\n            <div className=\"file-field input-field\">\n                <div className=\"btn\">\n                    <span>File</span>\n                    <input \n                        type=\"file\"\n                        onChange = {(e) => setImage(e.target.files[0])}     \n                    />\n                </div>\n                <div className=\"file-path-wrapper\">\n                    <input className=\"file-path validate\" type=\"text\" />\n                </div>\n                <button className='btn waves-effect waves-light postbtn' onClick={() => postDetails()}>\n                    post\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default CreatePost",["85","86"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/index.js",[],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/reducers/userReducer.js",["87","88","89","90"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/UserProfile.js",["91","92","93"],"/home/tinku/Desktop/webdev/react/instagram-clone/client/src/components/screens/FollowingPosts.js",["94","95"],"import React, { useContext, useEffect, useState } from 'react'\nimport { userContext } from '../../App'\nimport {Link} from 'react-router-dom'\n\n\nconst FollowingPosts = () => {\n    const [data, setData] = useState([])\n    const { state, dispatch } = useContext(userContext)\n\n    useEffect(() => {\n        fetch('/getsubpost', {\n            headers: { \n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n        .then(result => {\n            setData(result.posts)\n        })\n    }, [])\n\n    const likePost = (id) => {\n        fetch('/like',{\n            method: 'put', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.map(item => {\n                if(item._id === result._id) {\n                    return result\n                } else {\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const unlikePost = (id) => {\n        fetch('/unlike',{\n            method: 'put', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.map(item => {\n                if(item._id === result._id) {\n                    return result\n                } else {\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const commentOnPost = (text, postId) => {\n        fetch('/comment',{\n            method: 'put', \n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt')\n            },\n            body: JSON.stringify({\n                postId,\n                text\n            })\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.map(item => {\n                if(item._id === result._id) {\n                    return result\n                } else {\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const deletePost = (postId) => {\n        fetch(`/deletepost/${postId}`, {\n            method: 'delete',\n            headers: {\n                'Authorization': 'Bearer '+ localStorage.getItem('jwt') \n            }\n        }).then(res => res.json())\n        .then(result => {\n            const newData = data.filter(item => {\n                return item._id !== result._id\n            })\n            setData(newData)\n        })\n    }\n\n    return (\n        <div className='home'>\n            {\n                    data.map((item) => {\n                        return (\n                        <div key={item._id} className='homeposts'>\n                            <h4><Link to={item.postedBy._id !== state._id ? '/profile/'+item.postedBy._id : '/profile'}>{item.postedBy.name}</Link></h4>\n                            {\n                                item.postedBy._id === state._id && \n                                <i className='material-icons' \n                                    style={{float: \"right\"}}\n                                    onClick={() => deletePost(item._id)}\n                                >\n                                    delete\n                                </i>\n                            }\n                            <div className='homeImage'>\n                                <img src={item.photo} />\n                            </div>\n                            <div>\n                                { \n                                    item.likes.includes(state._id) ?\n                                        <i className=\"material-icons\"\n                                            onClick={()=>{unlikePost(item._id)}}\n                                        >thumb_down\n                                        </i>\n                                    : \n                                        <i className=\"material-icons\"\n                                            onClick={()=>{likePost(item._id)}}\n                                        >thumb_up\n                                        </i>\n                                }\n                                <span className='like-count'>{item.likes.length}</span>\n                                <p>{item.title}</p>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map((comment) => {\n                                        return (\n                                            <p key={comment._id}>\n                                                <span style={{fontWeight: '500'}}>{comment.postedBy.name} </span>\n                                                {comment.text}\n                                            </p>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e) => {\n                                    e.preventDefault()\n                                    commentOnPost(e.target[0].value, item._id)\n                                }}>\n                                    <input type='text' placeholder='comment'/>\n                                </form>\n                            </div>    \n                        </div>\n                        )\n                })\n            }\n        </div>\n\n    )\n}\n\nexport default FollowingPosts",{"ruleId":"96","severity":1,"message":"97","line":19,"column":11,"nodeType":"98","messageId":"99","endLine":19,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":28,"column":6,"nodeType":"102","endLine":28,"endColumn":8,"suggestions":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"96","severity":1,"message":"108","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"109","line":8,"column":20,"nodeType":"98","messageId":"99","endLine":8,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":129,"column":33,"nodeType":"112","endLine":129,"endColumn":57},{"ruleId":"104","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":14,"column":34,"nodeType":"117","messageId":"118","endLine":14,"endColumn":35,"suggestions":"119"},{"ruleId":"115","severity":1,"message":"120","line":14,"column":38,"nodeType":"117","messageId":"118","endLine":14,"endColumn":39,"suggestions":"121"},{"ruleId":"115","severity":1,"message":"122","line":14,"column":46,"nodeType":"117","messageId":"118","endLine":14,"endColumn":47,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"116","line":14,"column":59,"nodeType":"117","messageId":"118","endLine":14,"endColumn":60,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"120","line":14,"column":63,"nodeType":"117","messageId":"118","endLine":14,"endColumn":64,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"122","line":14,"column":71,"nodeType":"117","messageId":"118","endLine":14,"endColumn":72,"suggestions":"126"},{"ruleId":"115","severity":1,"message":"122","line":14,"column":80,"nodeType":"117","messageId":"118","endLine":14,"endColumn":81,"suggestions":"127"},{"ruleId":"115","severity":1,"message":"122","line":14,"column":84,"nodeType":"117","messageId":"118","endLine":14,"endColumn":85,"suggestions":"128"},{"ruleId":"115","severity":1,"message":"120","line":14,"column":100,"nodeType":"117","messageId":"118","endLine":14,"endColumn":101,"suggestions":"129"},{"ruleId":"115","severity":1,"message":"122","line":14,"column":108,"nodeType":"117","messageId":"118","endLine":14,"endColumn":109,"suggestions":"130"},{"ruleId":"115","severity":1,"message":"120","line":14,"column":125,"nodeType":"117","messageId":"118","endLine":14,"endColumn":126,"suggestions":"131"},{"ruleId":"115","severity":1,"message":"122","line":14,"column":133,"nodeType":"117","messageId":"118","endLine":14,"endColumn":134,"suggestions":"132"},{"ruleId":"100","severity":1,"message":"133","line":22,"column":7,"nodeType":"102","endLine":22,"endColumn":12,"suggestions":"134"},{"ruleId":"100","severity":1,"message":"135","line":55,"column":11,"nodeType":"102","endLine":55,"endColumn":18,"suggestions":"136"},{"ruleId":"110","severity":1,"message":"111","line":64,"column":21,"nodeType":"112","endLine":64,"endColumn":63},{"ruleId":"110","severity":1,"message":"111","line":89,"column":29,"nodeType":"112","endLine":89,"endColumn":70},{"ruleId":"96","severity":1,"message":"97","line":7,"column":13,"nodeType":"98","messageId":"99","endLine":7,"endColumn":18},{"ruleId":"100","severity":1,"message":"137","line":37,"column":7,"nodeType":"102","endLine":37,"endColumn":12,"suggestions":"138"},{"ruleId":"104","replacedBy":"139"},{"ruleId":"106","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":4,"column":20,"nodeType":"143","messageId":"144","endLine":4,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":7,"column":20,"nodeType":"143","messageId":"144","endLine":7,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":10,"column":19,"nodeType":"143","messageId":"144","endLine":10,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":17,"column":19,"nodeType":"143","messageId":"144","endLine":17,"endColumn":21},{"ruleId":"100","severity":1,"message":"145","line":19,"column":8,"nodeType":"102","endLine":19,"endColumn":10,"suggestions":"146"},{"ruleId":"110","severity":1,"message":"111","line":85,"column":21,"nodeType":"112","endLine":85,"endColumn":164},{"ruleId":"110","severity":1,"message":"111","line":120,"column":29,"nodeType":"112","endLine":120,"endColumn":68},{"ruleId":"96","severity":1,"message":"109","line":8,"column":20,"nodeType":"98","messageId":"99","endLine":8,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":129,"column":33,"nodeType":"112","endLine":129,"endColumn":57},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["147"],"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"'Profile' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["148"],["149"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["150","151"],"Unnecessary escape character: \\..",["152","153"],"Unnecessary escape character: \\\".",["154","155"],["156","157"],["158","159"],["160","161"],["162","163"],["164","165"],["166","167"],["168","169"],["170","171"],["172","173"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["176"],["148"],["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["177"],{"desc":"178","fix":"179"},"no-global-assign","no-unsafe-negation",{"messageId":"180","fix":"181","desc":"182"},{"messageId":"183","fix":"184","desc":"185"},{"messageId":"180","fix":"186","desc":"182"},{"messageId":"183","fix":"187","desc":"185"},{"messageId":"180","fix":"188","desc":"182"},{"messageId":"183","fix":"189","desc":"185"},{"messageId":"180","fix":"190","desc":"182"},{"messageId":"183","fix":"191","desc":"185"},{"messageId":"180","fix":"192","desc":"182"},{"messageId":"183","fix":"193","desc":"185"},{"messageId":"180","fix":"194","desc":"182"},{"messageId":"183","fix":"195","desc":"185"},{"messageId":"180","fix":"196","desc":"182"},{"messageId":"183","fix":"197","desc":"185"},{"messageId":"180","fix":"198","desc":"182"},{"messageId":"183","fix":"199","desc":"185"},{"messageId":"180","fix":"200","desc":"182"},{"messageId":"183","fix":"201","desc":"185"},{"messageId":"180","fix":"202","desc":"182"},{"messageId":"183","fix":"203","desc":"185"},{"messageId":"180","fix":"204","desc":"182"},{"messageId":"183","fix":"205","desc":"185"},{"messageId":"180","fix":"206","desc":"182"},{"messageId":"183","fix":"207","desc":"185"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [dispatch, history]",{"range":"216","text":"217"},"removeEscape",{"range":"218","text":"219"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"220","text":"221"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"222","text":"219"},{"range":"223","text":"221"},{"range":"224","text":"219"},{"range":"225","text":"221"},{"range":"226","text":"219"},{"range":"227","text":"221"},{"range":"228","text":"219"},{"range":"229","text":"221"},{"range":"230","text":"219"},{"range":"231","text":"221"},{"range":"232","text":"219"},{"range":"233","text":"221"},{"range":"234","text":"219"},{"range":"235","text":"221"},{"range":"236","text":"219"},{"range":"237","text":"221"},{"range":"238","text":"219"},{"range":"239","text":"221"},{"range":"240","text":"219"},{"range":"241","text":"221"},{"range":"242","text":"219"},{"range":"243","text":"221"},"Update the dependencies array to be: [uploadFields, url]",{"range":"244","text":"245"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"246","text":"247"},"Update the dependencies array to be: [body, history, title, url]",{"range":"248","text":"249"},"Update the dependencies array to be: [userid]",{"range":"250","text":"251"},[993,995],"[dispatch, history]",[511,512],"",[511,511],"\\",[515,516],[515,515],[523,524],[523,523],[536,537],[536,536],[540,541],[540,540],[548,549],[548,548],[557,558],[557,557],[561,562],[561,561],[577,578],[577,577],[585,586],[585,585],[602,603],[602,602],[610,611],[610,610],[810,815],"[uploadFields, url]",[1808,1815],"[dispatch, image, state]",[1204,1209],"[body, history, title, url]",[703,705],"[userid]"]